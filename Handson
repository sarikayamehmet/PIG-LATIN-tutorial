$pig
--load data into A
grunt> A = LOAD 'pig_samp.csv' using PigStorage(',') as (p1:chararray,p2:chararray,p3:chararray,p4:float,p5:float,p6:float,p7:float,p8:int,p9:float)
grunt> DUMP A
          (NYSE,QXM,2007-05-11,10.89,11.03,10.55,10.7,264000,10.7)
          (NYSE,QXM,2007-05-10,11.3,11.35,10.8,10.85,262900,10.85)
          (NYSE,QXM,2007-05-09,10.41,11.24,10.41,11.23,375500,11.23)
          (NYSE,QXM,2007-05-08,10.69,10.95,10.35,10.51,854400,10.51)
          (NYSE,QXM,2007-05-07,10.5,11.0,10.3,10.89,593600,10.89)
          (NYSE,QXM,2007-05-04,11.61,11.61,9.54,10.4,1054200,10.4)
          (NYSE,QXM,2007-05-03,12.0,12.45,11.27,11.31,0,11.31)
**Note: DUMP is used to write the output to the terminal.
**Note: STORE is used to save the data to the HDFS.
-- summing up all columns from p4 to p9 for every row (to work with columns use FOREACH/GENERATE)
grunt>B = FOREACH A GENERATE p4+p5+p6+p7+p8+p9; 
grunt> DUMP B          
          
          (380944.62)
          (213545.81)
          (97546.734)
          (251447.0)
          (147446.06)
          (108147.59)
          (121047.3)
          (766047.56)
          (347350.16)
--where condtion on filtering rows (to work with rows use FILTER)
grunt>C = FILTER B BY $0 > 1000000;
grunt> DUMP C;
          (1331238.0)
          (1080039.5)
          (1471846.8)
          (1360258.8)
          (1521368.6)
          (4536770.5)
          (2868965.2)
          (1754356.9)
          (1054253.5)
--GROUP condition - is used as group by clause in SQL
grunt> E = GROUP BY p4 

      (20.62,{(NYSE,QTM,1999-08-13,20.62,21.44,20.56,21.31,652900,21.31)})
      (20.69,{(NYSE,QTM,1999-08-19,20.69,20.81,19.94,20.12,493400,20.12)})
      (21.19,{(NYSE,QTM,1999-08-18,21.19,21.56,20.44,20.69,591200,20.69)})
      (21.44,{(NYSE,QTM,1999-08-17,21.44,21.5,21.13,21.44,430200,21.44)})
      (21.5,{(NYSE,QTM,1999-08-16,21.5,21.75,21.06,21.19,524900,21.19)})

Let say Data is as below:

(ZMB,1982,3871117196),(ZMB,1981,4008126571),(ZMB,1980,3884531016),(ZMB,1979,3353445540),(ZMB,1978,2811032513),(ZMB,1977,2515296940),(ZMB,1976,2742859309),(ZMB,1975,2442672141),(ZMB,1974,2910981312),(ZMB,1973,2434255188),(ZMB,1972,1872416725),(ZMB,1971,1653259296),(ZMB,1970,1788779240),(ZMB,1969,1926399230),(ZMB,1968,1573739326),(ZMB,1967,1340639464),(ZMB,1966,1238999505),(ZMB,1965,1061199576),(ZMB,1964,822639671),(ZMB,1963,704339718),(ZMB,1962,679279728),(ZMB,1961,682359727),(ZMB,1960,698739720),(ZMB,1989,3994673263),(ZMB,2011,19206044932),(ZMB,2010,16190196832),(ZMB,2009,12805029522),(ZMB,2008,14640792101),(ZMB,2007,11541420982),(ZMB,2006,10702200822),(ZMB,2005,7178556337),(ZMB,2004,5439176376),(ZMB,2003,4341841414),(ZMB,2002,3711284087),(ZMB,2001,3653822712),(ZMB,2000,3253551750),(ZMB,1999,3131340054),(ZMB,1998,3237205255)})
(ZWE,{(ZWE,2011,9656199514),(ZWE,2010,7433314460),(ZWE,2009,6133240672),(ZWE,2008,4415702801),(ZWE,2007,5291950101),(ZWE,2006,5443896500),(ZWE,2005,5755215232),(ZWE,2004,5805598443),(ZWE,2003,5727591778),(ZWE,2002,6342116354),(ZWE,2001,6777384733),(ZWE,2000,6689957610),(ZWE,1999,6858013063),(ZWE,1998,6401968164),(ZWE,1997,8529571573),(ZWE,1996,8553146597),(ZWE,1995,7111270669),(ZWE,1994,6890674989),(ZWE,1993,6563813295),(ZWE,1992,6751472201),(ZWE,1991,8641481701),(ZWE,1990,8783816666),(ZWE,1989,8286322699),(ZWE,1988,7814784052),(ZWE,1987,6741215095),(ZWE,1986,6217523684),(ZWE,1985,5637259335),(ZWE,1984,6352125901),(ZWE,1983,7764066989),(ZWE,1982,8539700674),(ZWE,1981,8011373807),(ZWE,1980,6678868224),(ZWE,1979,5177459391),(ZWE,1978,4351600474),(ZWE,1977,4364382098),(ZWE,1976,4318372004),(ZWE,1975,4371300709),(ZWE,1974,3982161446),(ZWE,1973,3309353601),(ZWE,1972,2677729443),(ZWE,1971,2178716264),(ZWE,1970,1884206350),(ZWE,1969,1747998819),(ZWE,1968,1479599898),(ZWE,1967,1397001995),(ZWE,1966,1281749476),(ZWE,1965,1311435825),(ZWE,1964,1217137959),(ZWE,1963,1159511745),(ZWE,1962,1117601632),(ZWE,1961,1096646620),(ZWE,1960,1052990384)}))

-- code to sum all the value column values of group by data
 A = LOAD 'pig_data.csv' using PigStorage(',') as (code:chararray,year:int,value:long);
B = GROUP A BY year;
 C = FOREACH B GENERATE group,SUM(A.value);
(VNM,1079400677631)
(VUT,9005657866)
(WLD,1070222000000000)
(WSM,7759495686)
(YEM,288601332728)
(ZAF,5566973369727)
(ZMB,213122218473)
(ZWE,272077593709)


LIMIT -- to limit the number of results
X = LIMIT C 3;
DUMP X;
(VNM,1079400677631)
(VUT,9005657866)
(WLD,1070222000000000)

--to execute the pig scripts
grunt> exec myscript.pig 

Storage/Loading  in PIG:
Load/Store functions determine how data goes into Pig and comes out of Pig.
BinStorage: Loads and stores data in machine-readable format.
A = LOAD 'data' USING BinStorage();

PigStorage and TextLoader support gzip and bzip compression for both read (load) and write (store).
PigStorage:
Loads and stores data in UTF-8 format.
Syntax:
PigStorage(field_delimiter) 

TextLoader:
Loads unstructured data in UTF-8 format.













